(def whitespace? (\ (c) (elem? c (list newline tab space))))
(def trim 
    (let (trim-start (\ (chars)
            (cond 
              (nil? chars) nil
              (whitespace? (first chars)) (trim-start (rest chars))
              otherwise chars))
          trim-end (\ (chars)
            (cond
              (nil? chars) nil
              (whitespace? (first chars)) nil
              otherwise (cons (first chars) (trim-end (rest chars))))))
      (compose string trim-end trim-start char-list)))

(def guessing-game (\ (answer)
    (do (print "guess a number... ")
        (let (guess (num (trim (input))))
          (cond (= guess answer) (println "you got it! go you")
                (> guess answer) (do (println "your guess is higher than the answer. try again :)")
                                     (guessing-game answer))
                (< guess answer) (do (println "your guess is lower than the answer. try again :)")
                                     (guessing-game answer)))))))
(def main (\ ()
  (do (println "im thinking of a number from 1 to 100. what is it?")
      (guessing-game (rand 1 100)))))
